{"version":3,"sources":["components/action-buttons/ActionButtons.js","assets/cross.svg","components/task/task.js","components/tasks/Tasks.js","components/add-task/AddTask.js","components/task-container/TaskContainer.js","App.js","reportWebVitals.js","index.js"],"names":["ActionButtons","setIsAddingTask","isAddingTask","className","onClick","Task","task","removeFromList","setAsChecked","checked","onDoubleClick","id","detail","src","cross","alt","Tasks","tasks","length","map","AddTask","taskInput","setTaskInput","addTaskToTasks","value","onChange","e","target","disabled","TaskContainer","App","useState","setTasks","setIsAddingTaskData","setTaskInputValue","previousTasks","filter","currentTasks","uuidv4","addToExistingTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbaf42d3.chunk.js","sourcesContent":["import \"./ActionButtons.css\";\n\nconst ActionButtons = ({ setIsAddingTask, isAddingTask }) => {\n  return (\n    <div className=\"actions-container\">\n      <button className=\"add-button\" onClick={setIsAddingTask}>\n        {isAddingTask ? \"Close\" : \"Add\"}\n      </button>\n    </div>\n  );\n};\n//sample commit to check branch permissions\nexport default ActionButtons;\n","export default __webpack_public_path__ + \"static/media/cross.2add4b66.svg\";","import \"./Task.css\";\nimport cross from \"../../assets/cross.svg\";\nconst Task = ({ task, removeFromList, setAsChecked }) => {\n  return (\n    <div\n      className={`task ${task.checked ? \"checked\" : \"\"}`}\n      onDoubleClick={() => setAsChecked(task.id)}\n    >\n      <div className=\"task-detail\">{task.detail}</div>\n      <span className=\"delete\" onClick={() => removeFromList(task.id)}>\n        <img src={cross} alt=\"cross-img\" className=\"cross-image\" />\n      </span>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"../task/task\";\nimport \"./Tasks.css\";\nconst Tasks = ({ tasks, removeFromList, setAsChecked, isAddingTask }) => {\n  return (\n    <>\n      {tasks && tasks?.length ? (\n        tasks.map((task) => (\n          <Task\n            task={task}\n            key={task.id}\n            removeFromList={removeFromList}\n            setAsChecked={setAsChecked}\n          />\n        ))\n      ) : !isAddingTask ? (\n        <p>No Tasks. Please click on add to add one.</p>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default Tasks;\n","import \"./AddTask.css\";\nexport default function AddTask({\n  setIsAddingTask,\n  taskInput,\n  setTaskInput,\n  addTaskToTasks,\n}) {\n  return (\n    <div className=\"add-task-container\">\n      <div className=\"add-task-input-wrapper\">\n        <label className=\"task-label\">Enter Task</label>\n        <input\n          className=\"task-input\"\n          value={taskInput}\n          onChange={(e) => setTaskInput(e.target.value)}\n        />\n      </div>\n      <button\n        className={`submit-button ${\n          taskInput === null || taskInput === \"\" ? \"disabled\" : \"\"\n        }`}\n        disabled={taskInput === null || taskInput === \"\"}\n        onClick={addTaskToTasks}\n      >\n        Submit\n      </button>\n    </div>\n  );\n}\n","import ActionButtons from \"../action-buttons/ActionButtons\";\nimport \"./TaskContainer.css\";\nimport Tasks from \"../tasks/Tasks\";\nimport AddTask from \"../add-task/AddTask\";\nconst TaskContainer = ({\n  tasks,\n  removeFromList,\n  setAsChecked,\n  isAddingTask,\n  setIsAddingTask,\n  addTaskToTasks,\n  setTaskInput,\n  taskInput,\n}) => {\n  return (\n    <div className=\"task-container\">\n      <ActionButtons\n        setIsAddingTask={setIsAddingTask}\n        isAddingTask={isAddingTask}\n      />\n      {isAddingTask ? (\n        <AddTask\n          addTaskToTasks={addTaskToTasks}\n          setIsAddingTask={setIsAddingTask}\n          setTaskInput={setTaskInput}\n          taskInput={taskInput}\n        />\n      ) : (\n        \"\"\n      )}\n      <Tasks\n        tasks={tasks}\n        isAddingTask={isAddingTask}\n        removeFromList={removeFromList}\n        setAsChecked={setAsChecked}\n      />\n    </div>\n  );\n};\n\nexport default TaskContainer;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TaskContainer from \"./components/task-container/TaskContainer\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const [isAddingTask, setIsAddingTask] = useState(false);\n\n  const [taskInput, setTaskInput] = useState(\"\");\n\n  function setIsAddingTaskData() {\n    setIsAddingTask((isAddingTask) => !isAddingTask);\n  }\n\n  function removeFromList(id) {\n    setTasks((previousTasks) => [\n      ...previousTasks.filter((task) => task.id !== id),\n    ]);\n  }\n\n  function addTaskToTasks() {\n    const task = { id: uuidv4(), detail: taskInput, checked: false };\n    setTasks((previousTasks) =>\n      previousTasks && previousTasks?.length\n        ? addToExistingTasks(previousTasks, task)\n        : [task]\n    );\n    setIsAddingTaskData();\n    setTaskInputValue(\"\");\n  }\n\n  function addToExistingTasks(previousTasks, task) {\n    return [...previousTasks, task];\n  }\n\n  function setTaskInputValue(value) {\n    setTaskInput(value);\n  }\n\n  function setAsChecked(id) {\n    setTasks((currentTasks) => {\n      return [\n        ...currentTasks.map((task) =>\n          task.id === id ? { ...task, checked: !task.checked } : task\n        ),\n      ];\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Task Manager</h1>\n        <TaskContainer\n          tasks={tasks}\n          isAddingTask={isAddingTask}\n          setIsAddingTask={setIsAddingTaskData}\n          removeFromList={removeFromList}\n          setAsChecked={setAsChecked}\n          taskInput={taskInput}\n          setTaskInput={setTaskInputValue}\n          addTaskToTasks={addTaskToTasks}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}